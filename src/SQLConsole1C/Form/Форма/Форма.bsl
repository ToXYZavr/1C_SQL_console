
// 1. Provider - поставщик услуг.
// 2. Data Source - Имя сервера.
// 3. Persist Security Info - вариант авторизации (False - Доменная авторизация, True - Авторизация с помощью логина и пароля).
// 4. если Persist Security Info = True тогда используем User ID - логин и Password - пароль.
// 5. Initial Catalog - наименование базы данных в СУБД.

&НаКлиенте
Перем СоединениеСВнешнимиИД;

&НаКлиенте
Процедура ВыбратьФайл(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	Диалог.Фильтр = "Файл связи с данными (*.udl)|*.udl";
	
	Диалог.Заголовок = "Выберите файл";
	
	Диалог.ПредварительныйПросмотр = Ложь;
	
	Диалог.Расширение = "udl";
	
	Диалог.ИндексФильтра = 0;
	
	Диалог.ПолноеИмяФайла = "";
	
	Диалог.ПроверятьСуществованиеФайла = Истина;
	
	Если Диалог.Выбрать() Тогда
		
		ПутьКФайлу=Диалог.ПолноеИмяФайла;
		
	Иначе
		
	    Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключательПриИзменении(Элемент)
	
	если Переключатель = 1 тогда
		
		Элементы.ГруппаСтрокиПодключения.Доступность=Истина;
		
		Элементы.ГруппаФайла.Доступность=Ложь;
		
		Элементы.ГруппаРучныхНастроекПодключения.Доступность=Ложь;
		
	ИначеЕсли Переключатель = 2 тогда
		
		Элементы.ГруппаСтрокиПодключения.Доступность=Ложь;
		
		Элементы.ГруппаФайла.Доступность=Истина;
		
		Элементы.ГруппаРучныхНастроекПодключения.Доступность=Ложь;
		
	ИначеЕсли Переключатель = 3 тогда
		
		Элементы.ГруппаСтрокиПодключения.Доступность=Ложь;
		
		Элементы.ГруппаФайла.Доступность=Ложь;
		
		Элементы.ГруппаРучныхНастроекПодключения.Доступность=Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДоменнаяАвторизация=Истина;
	
	Элементы.Логин.Доступность=Ложь;
	
	Элементы.Пароль.Доступность=Ложь;
	
	Переключатель=1;
	
	Элементы.ГруппаСтрокиПодключения.Доступность=Истина;
	
	Элементы.ГруппаФайла.Доступность=Ложь;
	
	Элементы.ГруппаРучныхНастроекПодключения.Доступность=Ложь;
	
	МассивТипов = новый Массив;
	
	МассивТипов.Добавить(Тип("Строка"));
	
	НовыеРеквизиты = Новый Массив;
	
	НовыеРеквизиты.Добавить(Новый РеквизитФормы("Результат",новый ОписаниеТипов(МассивТипов), "Ответ"));
	
	ИзменитьРеквизиты(НовыеРеквизиты);
	
	НовыйЭлемент = Элементы.Добавить("Ответ_Результат", Тип("ПолеФормы"), Элементы["ОтветРезультат"]);
	
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	
    НовыйЭлемент.ПутьКДанным = "Ответ.Результат";
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьсяКСерверу(Команда)
	
	если Переключатель = 1 Тогда
		
			Если СтрокаПодлючения="" Тогда 
		
				Сообщить("Не заданы параметры подключения к серверу.");
				
				Возврат;
				
			КонецЕсли;
		
		ФинальнаяСтрокаПодключенияКСерверу = СтрокаПодлючения;
		
	ИначеЕсли Переключатель = 2 Тогда
		
			Если ПутьКФайлу="" Тогда 
		
				Сообщить("Файл подключения к серверу не найден.");
				
				Возврат;
				
			КонецЕсли;
		
		ФинальнаяСтрокаПодключенияКСерверу = "File Name=" + ПутьКФайлу;
		
	ИначеЕсли Переключатель = 3 Тогда
		
	КонецЕсли;
	
	СоединениеСВнешнимиИД = Новый COMОбъект("ADODB.Connection");
	
	Попытка
		
		СоединениеСВнешнимиИД.Open(ФинальнаяСтрокаПодключенияКСерверу);
		
	Исключение
		
		Сообщить("Не удалось подключиться к серверу: " + ОписаниеОшибки());
		
		Возврат;
		
	КонецПопытки;
	
	Сообщить("Подключение к серверу прошло успешно.");
		
	Элементы.ОтключитьсяОтСервера.Доступность = Истина;
		
	Элементы.ПодключитьсяКСерверу.Доступность = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьсяОтСервера(Команда)
	
	Попытка
		
		СоединениеСВнешнимиИД.Close();
				
	Исключение
		
		Сообщить("Не удалось закрыть подключение к серверe: " + ОписаниеОшибки());
		
		Возврат;
		
	КонецПопытки;
	
	Сообщить("Подключение к серверу успешно закрыто.");
	
	СоединениеСВнешнимиИД = Неопределено;
	
	Элементы.ОтключитьсяОтСервера.Доступность = Ложь;
	
	Элементы.ПодключитьсяКСерверу.Доступность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗапрос(Команда)
	
	Если СоединениеСВнешнимиИД = неопределено Тогда
		
		Сообщить("Нет подключения к базе данных.");
		
		Возврат;
		
	КонецЕсли;
	
	Если ТекстЗапроса="" Тогда 
		
		Сообщить("Текст запроса не определен.");
		
		Возврат;
		
	КонецЕсли;
	
	попытка
		
		ЭтотОтвет = СоединениеСВнешнимиИД.Execute(ТекстЗапроса);
		
	исключение
		
		Сообщить("Запрос вернул ошибку " + ОписаниеОшибки());
		
		Возврат;
		
	КонецПопытки;
	
	ОчиститьОтвет();
	
	МассивДанных = Новый Массив;
	
	Пока ЭтотОтвет.EOF() = 0 Цикл
		
		СтруктураСтрокаТаблицы = Новый Структура;
		
		Для Каждого ИмяКолонки Из ЭтотОтвет.Fields Цикл
			
			СтруктураСтрокаТаблицы.Вставить(ИмяКолонки.Name, ЭтотОтвет.Fields(ИмяКолонки.Name).Value);	
			
		КонецЦикла;
		
		МассивДанных.Добавить(СтруктураСтрокаТаблицы);
		
		ЭтотОтвет.MoveNext();
		
	КонецЦикла;
	
	СформироватьТЗ(МассивДанных);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьТЗ(МассивДанных)
	
	СформированнаяТЗ = Новый ТаблицаЗначений;
	
	Для Каждого ЭлементМассива Из МассивДанных Цикл
		
		Если СформированнаяТЗ.Колонки.Количество() = 0 Тогда
			
			Для Каждого ЗначениеСтруктуры Из ЭлементМассива Цикл
				
                СформированнаяТЗ.Колонки.Добавить(ЗначениеСтруктуры.Ключ);
				
			КонецЦикла;
			
		КонецЕсли;
		
        НоваяСтрока = СформированнаяТЗ.Добавить();
		
		Для Каждого ЗначениеСтруктуры Из ЭлементМассива Цикл
			
            НоваяСтрока[ЗначениеСтруктуры.Ключ] = ЗначениеСтруктуры.Значение;
			
		КонецЦикла;
		
	КонецЦикла;
	
	КолонкиОтвета(СформированнаяТЗ,"Ответ","ОтветРезультат")
	
КонецПроцедуры

&НаСервере
Процедура КолонкиОтвета(СформированнаяТЗ,Ответ1,ОтветРезультат1)
	
	НовыеРеквизиты = Новый Массив;
	
	Для Каждого Колонка Из СформированнаяТЗ.Колонки Цикл
		
         НовыеРеквизиты.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, Ответ1));
		 
	 КонецЦикла;
	 
	ИзменитьРеквизиты(НовыеРеквизиты);
	
	Для Каждого Колонка Из СформированнаяТЗ.Колонки Цикл
		
        НовыйЭлемент = Элементы.Добавить(Ответ1 + "_" + Колонка.Имя, Тип("ПолеФормы"), Элементы[ОтветРезультат1]);
		
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		
        НовыйЭлемент.ПутьКДанным = Ответ1 + "." + Колонка.Имя;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(СформированнаяТЗ, Ответ1);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьОтвет()
	
	если Элементы["ОтветРезультат"].ПодчиненныеЭлементы.Количество()>0 тогда
		
		ответ.Очистить();
		
		для каждого Калонка из Элементы["ОтветРезультат"].ПодчиненныеЭлементы цикл
			
			ЭлементНаУдаление = Элементы.Найти(Калонка.Имя);
			
			если НЕ ЭлементНаУдаление = Неопределено тогда
				
				Элементы.Удалить(ЭлементНаУдаление);	
				
			КонецЕсли;
			
		КонецЦикла;
			
		УдаляемыеРеквизиты = Новый Массив;
		
		Для каждого Колонка из Ответ.Выгрузить(,).Колонки Цикл
			
			УдаляемыеРеквизиты.Добавить("Ответ." + Колонка.Имя);
			
		КонецЦикла;
		
		ИзменитьРеквизиты(,УдаляемыеРеквизиты);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если СоединениеСВнешнимиИД = неопределено Тогда
		
	иначе
		
		СоединениеСВнешнимиИД.Close();	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоменнаяАвторизацияПриИзменении(Элемент)
	
	Если ДоменнаяАвторизация=Истина тогда
		
		Элементы.Логин.Доступность=Ложь;
	
		Элементы.Пароль.Доступность=Ложь;
		
	иначе
		
		Элементы.Логин.Доступность=Истина;
	
		Элементы.Пароль.Доступность=Истина;
		
	КонецЕсли;
		
КонецПроцедуры
